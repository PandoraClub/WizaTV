.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH start\-stop\-daemon 8 2008\-01\-30 Debian\-Projekt dpkg\-Hilfsprogramme
.SH NAME
start\-stop\-daemon \- startet und stoppt System\-Daemon\-Programme
.
.SH ÜBERSICHT
\fBstart\-stop\-daemon\fP [\fIOptionen\fP] \fIBefehl\fP
.
.SH BESCHREIBUNG
\fBstart\-stop\-daemon\fP wird zur Steuerung der Erzeugung und Beendigung von
Prozessen auf Systemebene verwendet. Durch die Verwendung einer der
Abgleich\-Optionen kann \fBstart\-stop\-daemon\fP so konfiguriert werden, dass er
existierende Instanzen von einem laufenden Prozess finden kann.
.PP
Hinweis: Falls \fB\-\-pidfile\fP nicht angegeben ist, verhält sich
\fBstart\-stop\-daemon\fP ähnlich zu \fBkillall\fP(1). \fBstart\-stop\-daemon\fP wird die
Prozesstabelle nach Prozessen durchsuchen, die auf den Prozessnamen, uid
und/oder gid (falls angegeben) passen. Jeder passende Prozess wird
\fB\-\-start\fP daran hindern, den Daemon zu starten. Allen passenden Prozessen
wird das KILL\-Signal geschickt, falls \fB\-\-stop\fP angegeben ist. Für Daemons
die langlebige Kinder haben, die ein \fB\-\-stop\fP überleben sollen, müssen Sie
eine PID\-Datei angeben.
.
.SH BEFEHLE
.TP 
\fB\-S\fP, \fB\-\-start\fP [\fB\-\-\fP] \fIArgumente\fP
Prüfe auf Existenz eines angegebenen Prozesses. Falls ein solcher Prozess
existiert führt \fBstart\-stop\-daemon\fP nichts aus und beendet sich mit
Fehlerstatus 1 (0, falls \fB\-\-oknodo\fP angegeben wurde). Falls ein solcher
Prozess nicht existiert, dann startet es eine Instanz, entweder unter
Verwendung des ausführbaren Programms, das mittels \fB\-\-exec\fP (oder, falls
angegeben, mittels \fB\-\-startas\fP) spezifiziert wurde. Jedes weitere auf der
Kommandozeile nach \fB\-\-\fP angegebene Argument wird unverändert an das zu
startende Programm weitergegeben.
.TP 
\fB\-K\fP, \fB\-\-stop\fP
Überprüft auf die Existenz eines speziellen Prozesses. Falls ein solcher
Prozess existiert, dann sendet \fBstart\-stop\-daemon\fP das durch \fB\-\-signal\fP
angegebene Signal und beendet sich mit Fehlerstatus 0. Falls kein solcher
Prozess existiert, dann beendet sich \fBstart\-stop\-daemon\fP mit Fehlerstatus 1
(0 falls \fB\-\-oknodo\fP angegeben ist). Falls \fB\-\-retry\fP angegeben wurde, wird
\fBstart\-stop\-daemon\fP überprüfen, ob der/die Prozess(e) beendet wurden.
.TP 
\fB\-H\fP, \fB\-\-help\fP
Zeige Bedienungsinformationen und beendet sich.
.TP 
\fB\-V\fP, \fB\-\-version\fP
Zeige die Programmversion und beendet sich.
.
.SH ABGLEICH\-OPTIONEN
.TP 
\fB\-p\fP, \fB\-\-pidfile\fP \fIpid\-Datei\fP
Überprüfe, ob ein Prozess die Datei \fIpid\-Datei\fP erstellt hat.
.TP 
\fB\-x\fP, \fB\-\-exec\fP \fIProgramm\fP
Überprüfe auf Prozesse die (laut \fB/proc/\fP\fIpid\fP\fB/exe\fP) Instanzen von
diesem Programm sind.
.TP 
\fB\-n\fP, \fB\-\-name\fP \fIProzessname\fP
Überprüfe (laut \fB/proc/\fP\fIpid\fP\fB/stat\fP) auf Prozesse mit dem Namen
\fIProzessname\fP.
.TP 
\fB\-u\fP, \fB\-\-user\fP \fIBenutzername\fP|\fIuid\fP
Überprüfe auf Prozesse die dem mit \fIBenutzername\fP oder \fIuid\fP
spezifizierten Benutzer gehören.
.
.SH OPTIONEN
.TP 
\fB\-g\fP, \fB\-\-group\fP \fIGruppe\fP|\fIgid\fP
Wechsle zum Starten des Prozesses zur \fIGruppe\fP oder \fIgid\fP.
.TP 
\fB\-s\fP, \fB\-\-signal\fP \fISignal\fP
Mit \fB\-\-stop\fP wird das an den zu beendenden Prozess zu sendende Signal
spezifiziert (standardmäßig 15).
.TP 
\fB\-R\fP, \fB\-\-retry\fP \fIZeitüberschreitung\fP|\fIPlan\fP
Mit \fB\-\-stop\fP spezifiziert, dass \fBstart\-stop\-daemon\fP überprüfen soll, ob
der Prozess (die Prozesse) sich beenden. Es überprüft wiederholt, ob
passende Prozesse laufen, bis dies nicht mehr der Fall ist. Falls sich die
Prozesse nicht beenden, werden weitere im »Plan« angegebene Aktionen
durchgeführt.

Falls \fIZeitüberschreitung\fP anstelle von \fIPlan\fP spezifiziert wird, dann
wird der Plan
\fISignal\fP\fB/\fP\fIZeitüberschreitung\fP\fB/KILL/\fP\fIZeitüberschreitung\fP verwendet,
wobei \fISignal\fP das mit \fB\-\-signal\fP spezifizierte Signal ist.

\fIPlan\fP ist eine Liste von mindestens zwei durch Schrägstriche (\fB/\fP)
getrennten Punkten; jeder Punkt kann aus \fB\-\fP\fISignalnummer\fP oder
[\fB\-\fP]\fISignalname\fP bestehen, was bedeutet, dass dieses Signal gesendet
werden soll, oder aus \fIZeitüberschreitung\fP, was bedeutet, dass soviele
Sekunden auf das Beenden von Prozessen gewartet werden soll, oder aus
\fBforever\fP was bedeutet, den Rest des Plans falls notwendig für immer zu
wiederholen.

Falls das Ende des Plans erreicht wird und \fBforever\fP nicht spezifiziert
wurde, dann beendet sich der \fBstart\-stop\-daemon\fP mit dem Fehlerstatus
2. Falls ein Plan spezifiziert wurde, dann wird jedes mit \fB\-\-signal\fP
spezifizierte Signal ignoriert.
.TP 
\fB\-a\fP, \fB\-\-startas\fP \fIPfadname\fP
Mit \fB\-\-start\fP wird der über \fIPfadname\fP spezifizierte Prozess
gestartet. Falls nicht angegeben, werden standardmäßig die an \fB\-\-exec\fP
übergebenen Argumente verwendet.
.TP 
\fB\-t\fP, \fB\-\-test\fP
Gebe die Aktionen aus, die erledigt würden und setze die entsprechenden
Rückgabewerte, führe aber keine Aktionen durch.
.TP 
\fB\-o\fP, \fB\-\-oknodo\fP
Liefert den Rückgabewert 0 anstatt 1 falls keine Aktionen ausgeführt wurden
(würden).
.TP 
\fB\-q\fP, \fB\-\-quiet\fP
Gebe keine informativen Meldungen aus, zeige nur Fehlermeldungen an.
.TP 
\fB\-c \fP, \fB \-\-chuid \fP\fIBenutzername\fP|\fIuid\fP
Wechsele vor dem Start des Prozesses zu diesem Benutzername/uid. Sie können
durch Anhängen von \fB:\fP auch die Gruppe spezifizieren, in diesem Fall wird
die Gruppe oder gid wie bei dem »chown«\-Befehl (\fIBenutzer\fP\fB:\fP\fIGruppe\fP)
angegeben. Falls ein Benutzer ohne Gruppe angegeben ist, wird die primäre
GID für diesen Benutzer verwandt. Wenn Sie diese Option verwenden, müssen
Sie daran denken, dass die primäre und zusätzliche Gruppen auch gesetzt
werden, selbst wenn die Option \fB\-\-group\fP nicht angegeben wird. Die Option
\fB\-\-group\fP ist nur für Gruppen, in denen der Benutzer normalerweise kein
Mitglied ist (wie das Hinzufügen von pro\-Prozess Gruppenmitgliedschaften für
generische Benutzer wie \fBnobody\fP).
.TP 
\fB\-r\fP, \fB\-\-chroot\fP \fIWurzel\fP
Chdir und chroot vor dem Start des Prozesse zu \fIWurzel\fP. Bitte beachten
Sie, dass die PID\-Datei auch nach dem chroot geschrieben wird.
.TP 
\fB\-d\fP, \fB\-\-chdir\fP \fIPfad\fP
Chdir vor dem Starten des Prozesses zu \fIPfad\fP. Dies wird, falls die
\fB\-r\fP|\fB\-\-chroot\fP Option gesetzt ist, nach dem chroot durchgeführt. Falls
nicht angegeben, wird start\-stop\-daemon vor dem Prozess\-Start in das
Wurzelverzeichnis wechseln.
.TP 
\fB\-b\fP, \fB\-\-background\fP
Typischerweise verwendet für Programme, die sich nicht selbständig
ablösen. Diese Option zwingt \fBstart\-stop\-daemon\fP vor dem Start des
Prozesses einen Fork durchzuführen, und zwingt diesen dann in den
Hintergrund. \fBWARNUNG: start\-stop\-daemon\fP kann nicht den Rückgabewert
überprüfen, falls der Prozess aus \fBirgendeinem\fP Grund nicht startet. Dies
ist ein letztes Mittel und ist nur für Programme gedacht, bei denen das
selbstständige Forken keinen Sinn ergibt oder wo es nicht sinnvoll ist, den
Code hierfür hinzuzufügen.
.TP 
\fB\-N\fP, \fB\-\-nicelevel\fP \fIGanzzahl\fP
Dies ändert die Priorität des Prozesses bevor er gestartet wird.
.TP 
\fB\-k\fP, \fB\-\-umask\fP \fIMaske\fP
Dies setzt die umask des Prozesses bevor er gestartet wird.
.TP 
\fB\-m\fP, \fB\-\-make\-pidfile\fP
Verwendet, wenn ein Programm gestartet wird, das keine eigene PID\-Datei
erstellt. Diese Option sorgt dafür, dass \fBstart\-stop\-daemon\fP die mit
\fB\-\-pidfile\fP referenzierte Datei anlegt und die PID kurz vor der Ausführung
des Prozesse hineinlegt. Beachten Sie, dass die Datei nicht entfernt wird,
wenn das Programm beendet wird. \fBHINWEIS:\fP Diese Funktion könnte in nicht
allen Fällen funktionieren. Insbesondere wenn das auszuführende Programm
sich vom Hauptprozess forkt. Deshalb ist diese Option normalerweise nur in
Kombination mit der Option \fB\-\-background\fP sinnvoll.
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
Gibt ausführliche informative Meldungen aus.
.
.SH RÜCKGABEWERT
\fBstart\-stop\-daemon\fP liefert 0, falls die angeforderte Aktion ausgeführt
wurde oder \fB\-\-oknodo\fP angegeben und entweder \fB\-\-start\fP angegeben wurde und
ein passener Prozess lief bereits oder \fB\-\-stop\fP angebeben wurde und es gab
keinen passenden Prozess. Falls \fB\-\-oknodo\fP nicht angegeben wurde und nichts
erfolgte, wird 1 zurückgeliefert. Falls \fB\-\-stop\fP und \fB\-\-retry\fP angegeben
wurden, aber das Ende des Plans errreicht wurde und der Prozess noch läuft,
lautet der Fehlerwert 2. Bei allen anderen Fehlern ist der Status 3.
.
.SH BEISPIEL
Starte den Daemon \fBfood\fP falls noch keiner läuft (ein Prozess mit Namen
food, der als Benutzer food mit PID in food.pid läuft):
.IP
.nf
start\-stop\-daemon \-\-start \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-startas /usr/sbin/food \-\-chuid food \-\- \-\-daemon
.fi
.PP
Schicke \fBSIGTERM\fP an \fBfood\fP und warte bis zu fünf Sekunden auf sein
Beenden:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-retry 5
.fi
.PP
Vorführung eines angepassten Plans zum Beenden von \fBfood\fP:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-retry=TERM/30/KILL/5
.fi
.PP
.
.SH AUTOREN
Marek Michalkiewicz <marekm@i17linuxb.ists.pwr.wroc.pl> basierend
auf einer vorherigen Version von Ian Jackson
<ian@chiark.greenend.org.uk>.

Handbuchseite von Klee Dienes <klee@mit.edu>, teilweise von Ian
Jackson umformatiert.
.SH ÜBERSETZUNG
Die deutsche Übersetzung wurde 2004, 2006-2008 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 2 oder neuer für die Kopierbedingungen.
Es gibt KEINE HAFTUNG.
