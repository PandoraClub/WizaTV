.\" This is an -*- nroff -*- source file.
.\" dpkg-name and this manpage are Copyright 1995,1996 by Erick Branderhorst.
.\"
.\" This is free software; see the GNU General Public Licence version 2
.\" or later for copying conditions.  There is NO warranty.
.TH dpkg\-name 1 "2007-11-22" "Debian Project" "dpkg utilities"
.SH NAME
dpkg\-name \- rename Debian packages to full package names
.
.SH SYNOPSIS
.B dpkg\-name
.RI [ options  ]
.RB [ \-\- ]
.I files
.
.SH DESCRIPTION
.PP
This manual page documents the
.B dpkg\-name
program which provides an easy way to rename
.B Debian
packages into their full package names. A full package name consists
of \fI<package>_<version>_<architecture>.<package_type>\fP as specified in
the control file of the package. The \fI<version>\fP part of the filename
consists of the upstream version information optionally followed by a
hyphen and the revision information. The \fI<package_type>\fP part comes
from that field if present or fallbacks to \fBdeb\fP.
.
.SH OPTIONS
.TP
.BR \-a ", " \-\-no\-architecture
The destination filename will not have the architecture information.
.TP
.BR \-k ", " \-\-symlink
Create a symlink, instead of moving.
.TP
.BR \-o ", " \-\-overwrite
Existing files will be overwritten if they have the same name as the
destination filename.
.TP
.BR \-s ", " \-\-subdir " [\fIdir\fP]"
Files will be moved into a subdirectory. If the directory given as argument exists
the files will be moved into that directory otherwise the name of
the target directory is extracted from the section field in the
control part of the package. The target directory will be
`unstable/binary\-<architecture>/<section>'. If the section is
not found in the control, then `no-section' is assumed, and in this case,
as well as for sections `non-free' and `contrib' the target directory is
`<section>/binary\-<architecture>'. The section field isn't required so
a lot of packages will find their way to the `no\-section' area. Use
this option with care, it's messy.
.TP
.BR \-c ", " \-\-create\-dir
This option can used together with the \-s option. If a target
directory isn't found it will be created automatically.
.B Use this option with care.
.TP
.BR \-h ", " \-\-help
Show the usage message and exit.
.TP
.BR \-v ", " \-\-version
Show the version and exit.
.TP
.BR \-l ", " \-\-license
Show the copyright licensing terms and exit.
.
.SH EXAMPLES
.TP
.B dpkg\-name bar\-foo.deb
The file `bar\-foo.deb' will be renamed to bar\-foo_1.0\-2_i386.deb or
something similar (depending on whatever information is in the control
part of `bar\-foo.deb').
.TP
.B find /root/debian/ \-name \(aq*.deb\(aq | xargs \-n 1 dpkg\-name \-a
All files with the extension `deb' in the directory /root/debian and its
subdirectory's will be renamed by dpkg\-name if required into names with no
architecture information.
.TP
.B find \-name \(aq*.deb\(aq | xargs \-n 1 dpkg\-name \-a \-o \-s \-c
.B Don't do this.
Your archive will be messed up completely because a lot of packages
don't come with section information.
.B Don't do this.
.TP
.B dpkg \-\-build debian\-tmp && dpkg\-name \-o \-s .. debian\-tmp.deb
This can be used when building new packages.
.
.SH BUGS
Some packages don't follow the name structure
<package>_<version>_<architecture>.deb. Packages renamed by dpkg\-name
will follow this structure. Generally this will have no impact on how
packages are installed by
.BR dselect (1)/
.BR dpkg (1),
but other installation tools
might depend on this naming structure.
.
.SH SEE ALSO
.BR deb (5),
.BR deb\-control (5),
.BR dpkg (1),
.BR dpkg\-deb (1),
.BR find (1),
.BR xargs (1).
.
.SH AUTHOR
Copyright 1995,1996 Erick Branderhorst
.sp
This is free software; see the GNU General Public Licence version 2 or
later for copying conditions. There is NO WARRANTY.
