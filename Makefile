include bootstrap.mk

null :=
space := ${null} ${null}
${space} := ${space}

AUTOGENERATED_MAKEFILES=Makefile     Makefile.include     addons/skin.confluence/media/Makefile     xbmc/Makefile     xbmc/cdrip/Makefile     xbmc/cores/Makefile     xbmc/cores/VideoRenderers/Makefile     xbmc/cores/dvdplayer/Makefile     lib/libdvd/Makefile     xbmc/cores/DllLoader/Makefile     xbmc/cores/DllLoader/exports/Makefile     xbmc/cores/dvdplayer/DVDCodecs/Makefile     xbmc/cores/dvdplayer/DVDCodecs/Audio/Makefile     xbmc/cores/dvdplayer/DVDCodecs/Overlay/Makefile     xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile     xbmc/cores/dvdplayer/DVDDemuxers/Makefile     xbmc/cores/dvdplayer/DVDSubtitles/Makefile     xbmc/cores/AudioEngine/Makefile     xbmc/cores/paplayer/Makefile     xbmc/cores/omxplayer/Makefile     xbmc/cores/playercorefactory/Makefile     xbmc/messaging/Makefile     xbmc/messaging/helpers/Makefile     xbmc/osx/Makefile     xbmc/guilib/Makefile     xbmc/input/linux/Makefile     xbmc/interfaces/Makefile     xbmc/interfaces/builtins/Makefile     xbmc/network/Makefile     xbmc/network/upnp/Makefile     lib/libexif/Makefile     lib/cximage-6.0/Makefile     lib/libUPnP/Makefile     xbmc/DllPaths_generated.h     xbmc/DllPaths_generated_android.h     xbmc/freebsd/Makefile     xbmc/linux/Makefile     xbmc/filesystem/Makefile     xbmc/windowing/Makefile     xbmc/windowing/egl/Makefile     lib/addons/library.xbmc.addon/Makefile     lib/addons/library.kodi.adsp/Makefile     lib/addons/library.kodi.audioengine/Makefile     lib/addons/library.xbmc.codec/Makefile     lib/addons/library.kodi.guilib/Makefile     lib/addons/library.xbmc.pvr/Makefile     tools/Linux/kodi.sh     tools/Linux/kodi-standalone.sh     tools/Linux/kodi-xsession.desktop     tools/EventClients/Makefile     tools/EventClients/Clients/OSXRemote/Makefile     xbmc/peripherals/bus/Makefile     xbmc/peripherals/devices/Makefile     xbmc/android/activity/Makefile     xbmc/android/loader/Makefile     xbmc/android/jni/Makefile     xbmc/utils/Makefile     xbmc/main/Makefile     xbmc/main/posix/Makefile     tools/darwin/Configurations/App.xcconfig     tools/darwin/Configurations/Common.xcconfig     tools/darwin/packaging/ios/mkdeb-ios.sh     tools/darwin/packaging/osx/mkdmg-osx.sh     tools/darwin/packaging/migrate_to_kodi_ios.sh     xbmc/osx/Info.plist     xbmc/osx/ios/XBMCIOS-Info.plist     project/cmake/kodi-config.cmake     project/cmake/xbmc-config.cmake     tools/android/packaging/xbmc/AndroidManifest.xml     tools/android/packaging/Makefile     tools/android/packaging/xbmc/src/org/xbmc/kodi/Splash.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/Main.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/XBMCBroadcastReceiver.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/XBMCOnFrameAvailableListener.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/XBMCSettingsContentObserver.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/XBMCOnAudioFocusChangeListener.java     tools/android/packaging/xbmc/src/org/xbmc/kodi/XBMCVideoView.java     tools/android/packaging/xbmc/activity_main.xml     tools/android/packaging/xbmc/strings.xml     addons/xbmc.addon/addon.xml xbmc/network/httprequesthandler/python/Makefile addons/skin.re-touched/media/Makefile   xbmc/interfaces/python/Makefile   xbmc/interfaces/python/test/Makefile   .dummy

EC_DIRS= \
	tools/EventClients

DVDPCODECS_DIRS= \
	lib \
	lib/libdvd 

ifeq (,1)
DVDPCODECS_DIRS += xbmc/cores/dvdplayer/DVDCodecs/Video/libstagefrightICS
endif

DVDPLAYER_ARCHIVES=xbmc/cores/dvdplayer/DVDPlayer.a \
                   xbmc/cores/dvdplayer/DVDCodecs/DVDCodecs.a \
                   xbmc/cores/dvdplayer/DVDCodecs/Audio/Audio.a \
                   xbmc/cores/dvdplayer/DVDCodecs/Overlay/Overlay.a \
                   xbmc/cores/dvdplayer/DVDCodecs/Video/Video.a \
                   xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxers.a \
                   xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreams.a \
                   xbmc/cores/dvdplayer/DVDSubtitles/DVDSubtitles.a

DIRECTORY_ARCHIVES=$(DVDPLAYER_ARCHIVES) \
                   xbmc/addons/addons.a \
                   xbmc/cdrip/cdrip.a \
                   xbmc/contrib/kissfft/kissfft.a \
                   xbmc/cores/AudioEngine/audioengine.a \
                   xbmc/cores/DllLoader/dllloader.a \
                   xbmc/cores/DllLoader/exports/exports.a \
                   xbmc/cores/DllLoader/exports/util/exports_utils.a \
                   xbmc/cores/ExternalPlayer/ExternalPlayer.a \
                   xbmc/cores/VideoRenderers/VideoRenderer.a \
                   xbmc/cores/VideoRenderers/VideoShaders/VideoShaders.a \
                   xbmc/cores/cores.a \
                   xbmc/cores/paplayer/paplayer.a \
                   xbmc/cores/playercorefactory/playercorefactory.a \
                   xbmc/dbwrappers/dbwrappers.a \
                   xbmc/dialogs/dialogs.a \
                   xbmc/epg/epg.a \
                   xbmc/events/events.a \
                   xbmc/filesystem/MusicDatabaseDirectory/musicdatabasedirectory.a \
                   xbmc/filesystem/VideoDatabaseDirectory/videodatabasedirectory.a \
                   xbmc/filesystem/filesystem.a \
                   xbmc/guilib/guilib.a \
                   xbmc/input/input.a \
                   xbmc/interfaces/builtins/builtins.a \
                   xbmc/interfaces/generic/interfaces-generic.a \
                   xbmc/interfaces/info/info.a \
                   xbmc/interfaces/interfaces.a \
                   xbmc/interfaces/json-rpc/json-rpc.a \
                   xbmc/interfaces/legacy/legacy.a \
                   xbmc/interfaces/python/python_binding.a \
                   xbmc/linux/linux.a \
                   xbmc/listproviders/listproviders.a \
                   xbmc/main/posix/MessagePrinter.a \
                   xbmc/media/media.a \
                   xbmc/messaging/messaging.a \
                   xbmc/messaging/helpers/messagingHelpers.a \
                   xbmc/music/dialogs/musicdialogs.a \
                   xbmc/music/infoscanner/musicscanner.a \
                   xbmc/music/music.a \
                   xbmc/music/tags/musictags.a \
                   xbmc/music/windows/musicwindows.a \
                   xbmc/network/dacp/dacp.a \
                   xbmc/network/websocket/websocket.a \
                   xbmc/network/network.a \
                   xbmc/peripherals/bus/peripheral-bus.a \
                   xbmc/peripherals/devices/peripheral-devices.a \
                   xbmc/peripherals/dialogs/peripheral-dialogs.a \
                   xbmc/peripherals/peripherals.a \
                   xbmc/pictures/pictures.a \
                   xbmc/playlists/playlists.a \
                   xbmc/powermanagement/powermanagement.a \
                   xbmc/profiles/profiles.a \
                   xbmc/profiles/dialogs/profiles_dialogs.a \
                   xbmc/profiles/windows/profiles_windows.a \
                   xbmc/programs/programs.a \
                   xbmc/pvr/addons/pvraddons.a \
                   xbmc/pvr/channels/pvrchannels.a \
                   xbmc/pvr/dialogs/pvrdialogs.a \
                   xbmc/pvr/pvr.a \
                   xbmc/pvr/recordings/pvrrecordings.a \
                   xbmc/pvr/timers/pvrtimers.a \
                   xbmc/pvr/windows/pvrwindows.a \
                   xbmc/rendering/rendering.a \
                   xbmc/settings/settings.a \
                   xbmc/settings/dialogs/settings_dialogs.a \
                   xbmc/settings/lib/settings_lib.a \
                   xbmc/settings/windows/settings_windows.a \
                   xbmc/storage/storage.a \
                   xbmc/utils/utils.a \
                   xbmc/video/dialogs/videodialogs.a \
                   xbmc/video/jobs/video-jobs.a \
                   xbmc/video/videosync/videosync.a \
                   xbmc/video/video.a \
                   xbmc/video/windows/videowindows.a \
                   xbmc/view/view.a \
                   xbmc/windowing/windowing.a \
                   xbmc/windows/windows.a \
                   xbmc/xbmc.a \

NWAOBJSXBMC=	xbmc/threads/threads.a \
		xbmc/commons/commons.a


ifeq (1,1)
DIRECTORY_ARCHIVES += xbmc/interfaces/legacy/wsgi/legacy-wsgi.a
DIRECTORY_ARCHIVES += xbmc/network/httprequesthandler/httprequesthandlers.a
DIRECTORY_ARCHIVES += xbmc/network/httprequesthandler/python/httprequesthandlers-python.a
endif

ifeq (0,1)
DIRECTORY_ARCHIVES += xbmc/rendering/gl/rendering_gl.a
endif

ifeq (1,1)
DIRECTORY_ARCHIVES += xbmc/rendering/gles/rendering_gles.a
DIRECTORY_ARCHIVES += xbmc/windowing/egl/windowing_egl.a
endif

ifeq (1,1)
DIRECTORY_ARCHIVES += lib/libUPnP/libupnp.a \
                      xbmc/network/upnp/upnp.a
endif

ifeq (0,1)
DIRECTORY_ARCHIVES += xbmc/network/mdns/mdns.a
endif

ifeq ($(findstring osx,arm-osx),osx)
DIRECTORY_ARCHIVES += xbmc/osx/osx.a
DIRECTORY_ARCHIVES += xbmc/network/osx/network.a
DIRECTORY_ARCHIVES += xbmc/network/linux/network_linux.a
DIRECTORY_ARCHIVES += xbmc/powermanagement/osx/powermanagement.a
DIRECTORY_ARCHIVES += xbmc/storage/osx/storage.a
DIRECTORY_ARCHIVES += xbmc/windowing/osx/windowing_osx.a
INSTALL_FILTER += .*repository\.pvr-android\.xbmc\.org.*
INSTALL_FILTER += .*repository\.pvr-ios\.xbmc\.org.*
INSTALL_FILTER += .*repository\.pvr-win32\.xbmc\.org.*
else
INSTALL_FILTER += .*repository\.pvr-ios\.xbmc\.org.*
INSTALL_FILTER += .*repository\.pvr-win32\.xbmc\.org.*
INSTALL_FILTER += .*repository\.pvr-osx.*\.xbmc\.org.*
ifeq (,1)
DIRECTORY_ARCHIVES += xbmc/input/linux/input_linux.a
DIRECTORY_ARCHIVES += xbmc/input/touch/input_touch.a
DIRECTORY_ARCHIVES += xbmc/input/touch/generic/input_touch_generic.a
DIRECTORY_ARCHIVES += xbmc/network/linux/network_linux.a
DIRECTORY_ARCHIVES += xbmc/powermanagement/android/powermanagement_android.a
DIRECTORY_ARCHIVES += xbmc/storage/android/storage_android.a
DIRECTORY_ARCHIVES += xbmc/windowing/X11/windowing_X11.a
else
DIRECTORY_ARCHIVES += xbmc/input/linux/input_linux.a
DIRECTORY_ARCHIVES += xbmc/input/touch/input_touch.a
DIRECTORY_ARCHIVES += xbmc/input/touch/generic/input_touch_generic.a
DIRECTORY_ARCHIVES += xbmc/network/linux/network_linux.a
DIRECTORY_ARCHIVES += xbmc/powermanagement/linux/powermanagement_linux.a
DIRECTORY_ARCHIVES += xbmc/storage/linux/storage_linux.a
DIRECTORY_ARCHIVES += xbmc/windowing/X11/windowing_X11.a
INSTALL_FILTER += .*repository\.pvr-android\.xbmc\.org.*
endif
endif

ifeq ($(findstring freebsd,arm-osx),freebsd)
DIRECTORY_ARCHIVES += xbmc/freebsd/freebsd.a
endif

ifeq (1,1)
DIRECTORY_ARCHIVES += lib/UnrarXLib/UnrarXLib.a
endif

ifeq (,1)
DIRECTORY_ARCHIVES += xbmc/android/loader/AndroidDyload.a
DIRECTORY_ARCHIVES += xbmc/windowing/android/windowing_android.a
DIRECTORY_ARCHIVES += xbmc/android/bionic_supplement/bionic_supplement.a
DIRECTORY_ARCHIVES += xbmc/android/jni/jni.a
endif

ifeq (,1)
DIRECTORY_ARCHIVES += xbmc/cores/omxplayer/omxplayer.a
endif

LIB_DIRS=\
	lib/cximage-6.0 \
	lib/libexif \
	lib/cpluff \
	lib/xbmc-dll-symbols

LIBADDON_DIRS=\
	lib/addons/library.xbmc.addon \
	lib/addons/library.kodi.adsp \
	lib/addons/library.kodi.audioengine \
	lib/addons/library.xbmc.codec \
	lib/addons/library.xbmc.pvr \
	lib/addons/library.kodi.guilib \

CONFLUENCE_MEDIA=addons/skin.confluence/media
SKIN_DIRS=$(CONFLUENCE_MEDIA)

ifeq (1,1)
TOUCH_SKIN_MEDIA=addons/skin.re-touched/media
SKIN_DIRS+=$(TOUCH_SKIN_MEDIA)
endif

LIBS=-lsmbclient -lssh -lmicrohttpd -ldl -liconv -lyajl -lmysqlclient -lssl -lcrypto -lz -llzo2 -lpthread -ltiff -ljpeg -lbz2 -lgcrypt -lgpg-error  -framework CoreFoundation -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lpython2.6 -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -Wl,-search_paths_first -L/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/usr/lib/system -Wl,-segalign,4000 -arch armv7 -miphoneos-version-min=5.1 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk     -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib/mysql -lmysqlclient -lz -lm -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -ltinyxml  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -Wl,-search_paths_first -L/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/usr/lib/system -Wl,-segalign,4000 -arch armv7 -miphoneos-version-min=5.1 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk    -lcrossguid  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lxml2 -lpthread -lz -lm  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lxslt -lxml2 -lz -lpthread -lm -lxml2 -lpthread -lz -lm  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lfribidi  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lsqlite3 -ldl  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lpng15 -lz  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lpcre -lpcrecpp  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lpcre  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lfreetype -lz -lbz2  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -ltag  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lavfilter -lgmp -ldcadec -lgnutls -lz -liconv -lgmp -lhogweed -lgmp -lnettle -lm -lbz2 -lz -pthread -lavformat -lgmp -ldcadec -lgnutls -lz -liconv -lgmp -lhogweed -lgmp -lnettle -lm -lbz2 -lz -pthread -lavcodec -lgmp -ldcadec -lgnutls -lz -liconv -lgmp -lhogweed -lgmp -lnettle -lm -lbz2 -lz -pthread -lpostproc -lswscale -lm -lswresample -lm -lavutil -lm  -L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -lsquish  -L$(abs_top_srcdir)/lib/ffmpeg/libavcodec -lavcodec -L$(abs_top_srcdir)/lib/ffmpeg/libavfilter -lavfilter -L$(abs_top_srcdir)/lib/ffmpeg/libswresample -lswresample -L$(abs_top_srcdir)/lib/ffmpeg/libavformat -lavformat -L$(abs_top_srcdir)/lib/ffmpeg/libavutil -lavutil -L$(abs_top_srcdir)/lib/ffmpeg/libpostproc -lpostproc -L$(abs_top_srcdir)/lib/ffmpeg/libswscale -lswscale
CFLAGS=-O2 -g -D_DEBUG -Wall -fheinous-gnu-extensions -no-cpp-precomp -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -pipe -Wno-trigraphs -fpascal-strings -O3 -Wreturn-type -Wunused-variable -fmessage-length=0 -gdwarf-2 -arch armv7 -miphoneos-version-min=5.1  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk -isystem /Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include -fheinous-gnu-extensions -no-cpp-precomp -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -pipe -Wno-trigraphs -fpascal-strings -O3 -Wreturn-type -Wunused-variable -fmessage-length=0 -gdwarf-2 -arch armv7 -miphoneos-version-min=5.1  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk -isystem /Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include -O3 
CXXFLAGS=-O2 -g -D_DEBUG -Wall -no-cpp-precomp -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -pipe -Wno-trigraphs -fpascal-strings -O3 -Wreturn-type -Wunused-variable -fmessage-length=0 -gdwarf-2 -arch armv7 -miphoneos-version-min=5.1 -std=c++11 -stdlib=libc++ -g -O2 -std=gnu++11 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk -isystem /Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include -no-cpp-precomp -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -pipe -Wno-trigraphs -fpascal-strings -O3 -Wreturn-type -Wunused-variable -fmessage-length=0 -gdwarf-2 -arch armv7 -miphoneos-version-min=5.1 -std=c++11 -stdlib=libc++ -g -O2 -std=gnu++11 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk -isystem /Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include -O3 
LDFLAGS=-L/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/lib -Wl,-search_paths_first -L/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk/usr/lib/system -Wl,-segalign,4000 -arch armv7 -miphoneos-version-min=5.1 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk   
INCLUDES=$(sort  -I$(abs_top_srcdir)/xbmc/osx -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/mysql -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/libxml2  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/libxml2  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/fribidi  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/libpng15  -DPCRE_STATIC -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -DPCRE_STATIC -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/freetype2 -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include/taglib  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include  -I/Users/Shared/xbmc-depends/iphoneos9.2_armv7-target/include )

CLEAN_FILES=kodi.bin kodi-xrandr libkodi.so

DISTCLEAN_FILES=config.h config.log config.status tools/Linux/kodi.sh \
        tools/Linux/kodi-standalone.sh autom4te.cache config.h.in~ \
        system/libcpluff-arm-osx.so

ifeq (,1)
FINAL_TARGETS+=libkodi.so
ifeq (,1)
FINAL_TARGETS+=skins
endif
else
FINAL_TARGETS=kodi.bin skins kodi-xrandr
endif
FINAL_TARGETS+=Makefile externals

GTEST_DIR = lib/gtest
GTEST_INCLUDES = -I$(GTEST_DIR)/include
GTEST_LIBS = $(GTEST_DIR)/lib/.libs/libgtest.a

CHECK_DIRS = xbmc/addons/test \
             xbmc/filesystem/test \
             xbmc/music/tags/test \
             xbmc/network/test \
             xbmc/utils/test \
             xbmc/video/test \
             xbmc/threads/test \
             xbmc/interfaces/python/test \
             xbmc/cores/AudioEngine/Sinks/test \
             xbmc/test
CHECK_LIBS = xbmc/addons/test/addonsTest.a \
             xbmc/filesystem/test/filesystemTest.a \
             xbmc/music/tags/test/tagsTest.a \
             xbmc/network/test/networkTest.a \
             xbmc/utils/test/utilsTest.a \
             xbmc/video/test/videoTest.a \
             xbmc/threads/test/threadTest.a \
             xbmc/interfaces/python/test/pythonSwigTest.a \
             xbmc/cores/AudioEngine/Sinks/test/AESinkTest.a \
             xbmc/test/xbmc-test.a

ifeq (,1)
CHECK_LIBS += xbmc/windowing/tests/wayland/test_wayland.a

ifeq (,1)
WAYLAND_TEST_MODULE = xbmc/windowing/tests/wayland/xbmc-wayland-test-extension.so
$(WAYLAND_TEST_MODULE): force
	$(MAKE) -C $(@D) $(@F)
CHECK_EXTENSIONS = $(WAYLAND_TEST_MODULE)
CHECK_LIBADD=
endif
endif

ifeq (,1)
LIBSSE4+=sse4
sse4 : force
	$(MAKE) -C xbmc/linux/sse4
endif

CHECK_PROGRAMS = kodi-test

CLEAN_FILES += $(CHECK_PROGRAMS) $(CHECK_EXTENSIONS)

all : $(FINAL_TARGETS)
	@echo '-----------------------'
	@echo 'Kodi built successfully'
	@echo '-----------------------'

include Makefile.include

.PHONY : dllloader exports eventclients \
	dvdpcodecs dvdpextcodecs imagelib codecs externals force skins libaddon check \
	testframework testsuite

# hack targets to keep build system up to date
Makefile : config.status $(addsuffix .in, $(AUTOGENERATED_MAKEFILES))
	@echo "Regenerating Makefiles..."
	@./config.status &> /dev/null
	@echo "done"

config.status: configure

# skin textures
ifeq (1,1)
skins: /Users/Shared/xbmc-depends/buildtools-native/bin/TexturePacker
	 $(MAKE) -C $(CONFLUENCE_MEDIA)
ifeq (1,1)
	 $(MAKE) -C $(TOUCH_SKIN_MEDIA)
endif
else
skins:
endif

# Setup some dependencies for subdir makes
xbmc/cores/paplayer/paplayer.a:
$(DVDPLAYER_ARCHIVES)         : dvdpcodecs

lib/cpluff/libcpluff/.libs/libcpluff.a: force
	$(MAKE) -C lib/cpluff/libcpluff
system/libcpluff-arm-osx.so: lib/cpluff/libcpluff/.libs/libcpluff.a exports
ifeq ($(findstring osx,arm-osx), osx)
  ifeq (arm-osx, arm-osx)
	$(CXX) $(LDFLAGS) -all_load -bundle -flat_namespace -undefined dynamic_lookup -read_only_relocs suppress -o $@ $<
  else
	$(CXX) $(LDFLAGS) -all_load -bundle -flat_namespace -undefined dynamic_lookup -lexpat $(BUNDLE1_O) -o $@ $<
  endif
else
	$(CXX) $(LDFLAGS) -shared -o $@ -Wl,--whole-archive $< \
		-Wl,--no-whole-archive  \
		`cat xbmc/cores/DllLoader/exports/wrapper.def` xbmc/cores/DllLoader/exports/wrapper.o -lexpat
endif

exports: xbmc/cores/DllLoader/exports/exports.a xbmc/cores/DllLoader/exports/util/exports_utils.a
	$(MAKE) -C xbmc/cores/DllLoader/exports wrapper.def
dllloader: exports xbmc/cores/DllLoader/dllloader.a

libaddon: exports
	$(MAKE) -C lib/addons/library.xbmc.addon
	$(MAKE) -C lib/addons/library.kodi.adsp
	$(MAKE) -C lib/addons/library.kodi.audioengine
	$(MAKE) -C lib/addons/library.xbmc.codec
	$(MAKE) -C lib/addons/library.kodi.guilib
	$(MAKE) -C lib/addons/library.xbmc.pvr
dvdpcodecs: dllloader
	$(MAKE) -C lib/libdvd

ifeq (,1)
dvdpextcodecs: libkodi.so
	$(MAKE) -C xbmc/cores/dvdplayer/DVDCodecs/Video/libstagefrightICS
else
dvdpextcodecs:
endif

eventclients:
ifeq ($(findstring osx,arm-osx), osx)
ifneq ($(findstring arm,arm-osx), arm)
	$(MAKE) -C tools/EventClients/Clients/OSXRemote
endif
else
	$(MAKE) -C tools/EventClients
endif
libexif: dllloader
	$(MAKE) -C lib/libexif

imagelib: dllloader
	$(MAKE) -C lib/cximage-6.0

codecs: dvdpcodecs dvdpextcodecs

libs: $(LIBSSE4) imagelib libexif system/libcpluff-arm-osx.so

externals: codecs libs libaddon

xcode_depends: \
	codecs libs eventclients skins libaddon

DYNOBJSXBMC= \
	xbmc/linux/linux.a \
	xbmc/network/network.a \
	xbmc/video/windows/videowindows.a \
	xbmc/utils/utils.a \
	xbmc/cores/DllLoader/exports/util/exports_utils.a \
	xbmc/cores/DllLoader/exports/exports.a \
	xbmc/settings/settings.a \
	xbmc/video/video.a \
	xbmc/pvr/addons/pvraddons.a \
	xbmc/pvr/windows/pvrwindows.a \
	xbmc/guilib/guilib.a # must be dynamic to avoid linker errors

ifeq ($(findstring freebsd,arm-osx),freebsd)
DYNOBJSXBMC+= xbmc/freebsd/freebsd.a
endif

ifeq (,1)
FFMPEGOBJS = /libavcodec.a \
             /libavfilter.a \
             /libswresample.a \
             /libavformat.a \
             /libavutil.a \
             /libpostproc.a \
             /libswscale.a
DYNOBJSXBMC+= $(FFMPEGOBJS)
LIBS+=   

$(FFMPEGOBJS): dvdpcodecs
endif

ifeq (,1)
MAINOBJS+=xbmc/android/activity/activity.a
else
MAINOBJS+=xbmc/main/main.a
endif # USE_ANDROID


OBJSXBMC =$(DIRECTORY_ARCHIVES)
OBJSXBMC:=$(filter-out $(DYNOBJSXBMC), $(OBJSXBMC))

BIN_DIRS = $(dir $(DIRECTORY_ARCHIVES)) $(dir $(NWAOBJSXBMC)) $(dir $(MAINOBJS))

DIRS= $(BIN_DIRS) $(EC_DIRS) $(DVDPCODECS_DIRS) \
	$(LIB_DIRS) $(LIBADDON_DIRS) $(SKIN_DIRS) xbmc/main

$(NWAOBJSXBMC) $(DIRECTORY_ARCHIVES) $(MAINOBJS): force
	@$(MAKE) $(if $(V),,-s) -C $(@D)

# Binary Addon bindings
include xbmc/addons/addon-bindings.mk

libkodi.so: $(OBJSXBMC) $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(MAINOBJS)
ifeq ($(findstring osx,arm-osx), osx)
	$(SILENT_LD) $(CXX) $(LDFLAGS) -bundle -o $@ $(MAINOBJS) -Wl,-all_load,-ObjC $(MAINOBJS) $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(OBJSXBMC) $(LIBS) -read_only_relocs suppress
else
	$(SILENT_LD) $(CXX) $(CXXFLAGS) $(LDFLAGS) -shared -o $@ -Wl,--whole-archive $(MAINOBJS) -Wl,--no-whole-archive,--start-group $(MAINOBJS) $(DYNOBJSXBMC) $(OBJSXBMC) -Wl,--end-group -Wl,--no-undefined $(NWAOBJSXBMC) $(LIBS) -Wl,-Bsymbolic
endif

kodi.bin: $(OBJSXBMC) $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(MAINOBJS)

ifeq ($(findstring osx,arm-osx), osx)
	$(SILENT_LD) $(CXX) $(LDFLAGS) -o kodi.bin $(MAINOBJS) -Wl,-all_load,-ObjC $(MAINOBJS) $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(OBJSXBMC) $(LIBS) -rdynamic
else
	$(SILENT_LD) $(CXX) $(CXXFLAGS) $(LDFLAGS) -o kodi.bin $(MAINOBJS) -Wl,--start-group $(MAINOBJS) $(DYNOBJSXBMC) $(OBJSXBMC) -Wl,--end-group $(NWAOBJSXBMC) $(LIBS) -rdynamic
endif

kodi-xrandr: xbmc-xrandr.c
ifneq (1,0)
	# xbmc-xrandr.c gets picked up by the default make rules
	@echo "excluding kodi-xrandr"
else
	$(SILENT_LD) $(CC) $(CFLAGS) $(LDFLAGS) -o kodi-xrandr xbmc-xrandr.c -lXrandr -lX11 -lm
endif


install-bin: kodi.bin # developement convenience target
	sudo install -d $(DESTDIR)$(libdir)
	sudo install kodi.bin $(DESTDIR)$(libdir)/kodi

ifeq ($(findstring osx,arm-osx), osx)
	# TODO: add osx install
else
install: install-binaries install-arch install-datas

apk obb apk-unsigned apk-obb apk-obb-unsigned apk-noobb: install
	make -C tools/android/packaging $@

apk-clean apk-sign:
	make -C tools/android/packaging $@

install-binaries: install-scripts
	@echo "Copying kodi binary to $(DESTDIR)$(libdir)/kodi/"
	@install -d $(DESTDIR)$(libdir)/kodi
	@cd $(DESTDIR)$(libdir); [ -L xbmc ] || [ -d xbmc ] || ln -s kodi xbmc
ifeq (1,0)
	@install kodi-xrandr $(DESTDIR)$(libdir)/kodi/kodi-xrandr
endif
ifeq (,1)
	@install libkodi.so $(DESTDIR)$(libdir)/kodi/libkodi.so
else
	@install kodi.bin $(DESTDIR)$(libdir)/kodi/kodi.bin
	@echo "You can run kodi with the command 'kodi'"
endif
endif

install-arch:
	@# Arch dependent files
ifeq ($(findstring freebsd,arm-osx), freebsd)
	@find -E system addons -type f -not -iregex ".*\.git.*" \
		-iregex ".*arm-osx.*|.*\.vis|.*\.xbs" \
		-exec sh -c "install -d \"$(DESTDIR)$(libdir)/kodi/\`dirname '{}'\`\"" \; \
		-and \
		-exec install "{}" $(DESTDIR)$(libdir)/kodi/"{}" \; \
		-exec printf " -- %-75.75s\r" "{}" \;
else
ifeq ($(findstring Darwin,$(shell uname -s)),Darwin)
	@find -E system addons -type f -not -iregex ".*\.git.*" \
		-iregex ".*arm-osx.*|.*\.vis|.*\.xbs" \
		-exec sh -c "install -d \"$(DESTDIR)$(libdir)/kodi/\`dirname '{}'\`\"" \; \
		-and \
		-exec install "{}" $(DESTDIR)$(libdir)/xbmc/"{}" \; \
		-exec printf " -- %-75.75s\r" "{}" \;
else
	@find system addons -regextype posix-extended -type f -not -iregex ".*\.git.*" -iregex ".*\.so|.*\.so\.[0-9].*|.*\.vis|.*\.xbs" -exec install -D "{}" $(DESTDIR)$(libdir)/kodi/"{}" \; -printf " -- %-75.75f\r"
	@find -L addons -regextype posix-extended -type f -not -iregex ".*\.git.*" -iregex ".*\.so|.*\.so\.[0-9].*" -exec cp -d "{}" $(DESTDIR)$(libdir)/kodi/"{}" \; -printf " -- %-75.75f\r"
endif
endif

install-scripts:
	@install -d $(DESTDIR)$(bindir)
	@install tools/Linux/kodi.sh $(DESTDIR)$(bindir)/kodi
	@cd $(DESTDIR)$(bindir); [ -L xbmc ] || [ -f xbmc ] || ln -s kodi xbmc
	@install tools/Linux/kodi-standalone.sh $(DESTDIR)$(bindir)/kodi-standalone
	@cd $(DESTDIR)$(bindir); [ -L xbmc-standalone ] || [ -f xbmc-standalone ] ||  ln -s kodi-standalone xbmc-standalone
	@install -d $(DESTDIR)$(datarootdir)/kodi
	@cd $(DESTDIR)$(datarootdir); [ -L xbmc ] || [ -d xbmc ] || ln -s kodi xbmc
	@install -d $(DESTDIR)$(datarootdir)/xsessions
	@install -m 0644 tools/Linux/kodi-xsession.desktop $(DESTDIR)$(datarootdir)/xsessions/kodi.desktop
	@cd $(DESTDIR)$(datarootdir)/xsessions; [ -L xbmc.desktop ] || [ -f xbmc.desktop ] || ln -s kodi.desktop xbmc.desktop

install-datas: install-scripts
	@echo "Copying support and legal files..."
	@install -d $(DESTDIR)$(docdir)
	@for FILE in `ls LICENSE.GPL *.txt`; do \
		install -m 0644 "$$FILE" "$(DESTDIR)$(docdir)/$$FILE"; done
	@install -m 0644 "docs/README.linux" "$(DESTDIR)$(docdir)/README.linux"
	@echo "Done!"
	@echo "Copying system files to $(DESTDIR)$(datarootdir)/kodi"
	@install -d $(DESTDIR)$(datarootdir)/kodi
	@# Arch independent files
ifeq ($(findstring bsd,arm-osx), bsd)
	@find -E addons media userdata system -type f \
		-not -iregex ".*-arm-osx.*|.*\.vis|.*\.xbs|.*\.git.*|.*\.so|.*\.so\.[0-9].*|.*\.dll|$(subst ${space},|,$(INSTALL_FILTER))" \
		-exec sh -c "install -d \"$(DESTDIR)$(datarootdir)/kodi/\`dirname '{}'\`\"" \; \
		-and \
		-exec install -m 0644 "{}" $(DESTDIR)$(datarootdir)/kodi/"{}" \; \
		-exec printf " -- %-75.75s\r" "{}" \;
else
ifeq ($(findstring Darwin,$(shell uname -s)),Darwin)
	@find -E addons media userdata system -type f \
		-not -iregex ".*-arm-osx.*|.*\.vis|.*\.xbs|.*\.git.*|.*\.so|.*\.so\.[0-9].*|.*\.dll|$(subst ${space},|,$(INSTALL_FILTER))" \
		-exec sh -c "install -d \"$(DESTDIR)$(datarootdir)/xbmc/\`dirname '{}'\`\"" \; \
		-and \
		-exec install -m 0644 "{}" $(DESTDIR)$(datarootdir)/xbmc/"{}" \; \
		-exec printf " -- %-75.75s\r" "{}" \;
else
	@find addons media userdata system -regextype posix-extended -type f -not -iregex ".*-arm-osx.*|.*\.vis|.*\.xbs|.*\.git.*|.*\.so|.*\.so\.[0-9].*|.*\.dll|$(subst ${space},|,$(INSTALL_FILTER))" -exec install -D -m 0644 "{}" $(DESTDIR)$(datarootdir)/kodi/"{}" \; -printf " -- %-75.75f\r"
endif
endif
	@# Icons and links
	@install -d $(DESTDIR)$(datarootdir)/applications
	@install -m 0644 tools/Linux/kodi.desktop $(DESTDIR)$(datarootdir)/applications/kodi.desktop

	@install -d $(DESTDIR)$(datadir)/icons/hicolor/16x16/apps
	@install -m 0644 tools/Linux/packaging/media/icon16x16.png $(DESTDIR)$(datadir)/icons/hicolor/16x16/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/22x22/apps
	@install -m 0644 tools/Linux/packaging/media/icon22x22.png $(DESTDIR)$(datadir)/icons/hicolor/22x22/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/24x24/apps
	@install -m 0644 tools/Linux/packaging/media/icon24x24.png $(DESTDIR)$(datadir)/icons/hicolor/24x24/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/32x32/apps
	@install -m 0644 tools/Linux/packaging/media/icon32x32.png $(DESTDIR)$(datadir)/icons/hicolor/32x32/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/48x48/apps
	@install -m 0644 tools/Linux/packaging/media/icon48x48.png $(DESTDIR)$(datadir)/icons/hicolor/48x48/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/64x64/apps
	@install -m 0644 tools/Linux/packaging/media/icon64x64.png $(DESTDIR)$(datadir)/icons/hicolor/64x64/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/128x128/apps
	@install -m 0644 tools/Linux/packaging/media/icon128x128.png $(DESTDIR)$(datadir)/icons/hicolor/128x128/apps/kodi.png
	@install -d $(DESTDIR)$(datadir)/icons/hicolor/256x256/apps
	@install -m 0644 tools/Linux/packaging/media/icon256x256.png $(DESTDIR)$(datadir)/icons/hicolor/256x256/apps/kodi.png

	@test -z "$(DESTDIR)" && gtk-update-icon-cache -f -q -t $(datadir)/icons/hicolor || :

	@echo "Copying bindings to $(DESTDIR)$(includedir)/kodi"
	@install -d $(DESTDIR)$(includedir)/kodi
	@for f in $(BINDINGS); do \
	  install -m 0644 $$f $(DESTDIR)$(includedir)/kodi ; \
	done
	@for f in project/cmake/*.cmake; do \
	  install -m 0644 $$f $(DESTDIR)$(libdir)/kodi; \
	done
	@for f in project/cmake/scripts/common/*.cmake; do \
	  install -m 0644 $$f $(DESTDIR)$(libdir)/kodi; \
	done
	@cd $(DESTDIR)$(includedir); [ -L xbmc ] || [ -d xbmc ] || ln -s kodi xbmc

uninstall:
	@echo "Removing Kodi..."
	@rm -rf $(DESTDIR)$(libdir)/kodi
	@rm -rf $(DESTDIR)$(datarootdir)/kodi $(DESTDIR)$(bindir)/kodi
	@rm -rf $(DESTDIR)$(bindir)/kodi-standalone
	@rm -rf $(DESTDIR)$(datarootdir)/xsessions/kodi.desktop
	@rm -rf $(libdir)/libkodi_*
	@rm -rf $(prefix)/include/kodi
	@echo "Done!"

clean-kodi.bin:
	rm -f kodi.bin
	for d in $(BIN_DIRS); do if test -f $$d/Makefile; then $(MAKE) -C $$d clean; fi; done
clean-eventclients:
	for d in $(EC_DIRS); do if test -f $$d/Makefile; then $(MAKE) -C $$d clean; fi; done
clean-dvdpcodecs:
	for d in $(DVDPCODECS_DIRS); do if test -f $$d/Makefile; then $(MAKE) -C $$d clean; fi; done
clean-libs:
	for d in $(LIB_DIRS); do if test -f $$d/Makefile; then $(MAKE) -C $$d clean; fi; done
clean-libaddons:
	for d in $(LIBADDON_DIRS); do if test -f $$d/Makefile; then $(MAKE) -C $$d clean; fi; done

clean-codecs: clean-dvdpcodecs

clean-externals: clean-codecs clean-eventclients clean-libs \
	clean-libaddons

ifeq (1,1)
check: testsuite
	for check_program in $(CHECK_PROGRAMS); do $(CURDIR)/$$check_program; done

testsuite: $(CHECK_EXTENSIONS) $(CHECK_PROGRAMS)

testframework: $(GTEST_LIBS)

$(GTEST_LIBS): $(GTEST_DIR)/Makefile

$(GTEST_DIR)/Makefile: force
	$(MAKE) CXXFLAGS="$(CXXFLAGS) -DGTEST_USE_OWN_TR1_TUPLE=1" -C $(GTEST_DIR)

$(CHECK_LIBS): force
	@$(MAKE) CXXFLAGS="$(CXXFLAGS) -DGTEST_USE_OWN_TR1_TUPLE=1" $(if $(V),,-s) -C $(@D)

kodi-test: $(CHECK_LIBS) $(OBJSXBMC) $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(GTEST_LIBS)
ifeq ($(findstring osx,arm-osx), osx)
	$(SILENT_LD) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(GTEST_INCLUDES) -o $@ -Wl,-all_load,-ObjC $(DYNOBJSXBMC) $(NWAOBJSXBMC) $(OBJSXBMC) $(GTEST_LIBS) $(CHECK_LIBS) $(LIBS) $(CHECK_LIBADD) -rdynamic
else
	$(SILENT_LD) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(GTEST_INCLUDES) -o $@ -Wl,--whole-archive $(DYNOBJSXBMC) $(OBJSXBMC) $(GTEST_LIBS) $(CHECK_LIBS) -Wl,--no-whole-archive $(NWAOBJSXBMC) $(LIBS) $(CHECK_LIBADD) -rdynamic
endif
else
# Give a message that the framework is not configured, but don't fail.
check testsuite testframework:
	@echo "Google Test Framework not configured, skipping testsuite check."
endif
